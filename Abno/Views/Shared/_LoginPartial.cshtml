@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<div>
    <ul class="navbar-nav">
        @if (SignInManager.IsSignedIn(User))
        {
            <li class="nav-item">
                
            </li>

            <li class="nav-item">
                @{
                    var user = await UserManager.GetUserAsync(User);
                    if (user != null)
                    {
                        <div class="dropdown">
                            <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                                <img src="@user.Avatar" class="rounded-circle" alt="user avatar" style="width: 50px; height: 50px;" />
                            </a>

                            <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage" class="dropdown-item">
                                Manage account
                                </a>
                                <form class="dropdown-item" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                                    <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
                                </form>
                            </ul>
                        </div>
                    }
                }
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>
        }
    </ul>

</div>
